%% find the best epoch based on line validation

close all
clear
clc
addpath(genpath('/data01/gkim/Matlab_subcodes/'))

save_fig =true;
save_png =true;


dir_out0 = '/data02/gkim/stem_cell_jwshin/outs';
dir_case = '23_SEC1H5_wider_v3_allh0_GM_germline_fishdeep10_b012_in_lr0.001';
dir_out = [dir_out0 '/' ...
    dir_case];
dir_outr = [dir_out '_testRA'];
dir_outi = [dir_out '_testiPSC'];

epochs = [];
accs_tr = [];
accs_va = [];
accs_te = [];

cd(dir_out)
list_mdl = dir('epoch*.tar');

for iter_mdl = 1:length(list_mdl)
    cd(dir_out)

    name_mdl = list_mdl(iter_mdl).name;
    idxs_lbra = strfind(name_mdl,'[');
    epochs = [epochs; str2num(name_mdl(idxs_lbra(1)+1:idxs_lbra(1)+5))];
    accs_tr = [accs_tr; str2num(name_mdl(idxs_lbra(5)+1:idxs_lbra(5)+5))];
    accs_va = [accs_va; str2num(name_mdl(idxs_lbra(6)+1:idxs_lbra(6)+5))];
    accs_te = [accs_te; str2num(name_mdl(idxs_lbra(6)+1:idxs_lbra(6)+5))];


    
    metrics = accs_va+accs_tr;
    idx_bestmdl = min(find(metrics == max(metrics)));
    dir_bestmdl = list_mdl(idx_bestmdl).name;
        idxs_lbra = strfind(dir_bestmdl,'[');
    epoch_bestmdl_str = (dir_bestmdl(idxs_lbra(1)+1:idxs_lbra(1)+5));
end

epoch_bestmdl_str = '00078'

targets_test = [];
scores_test = [];
feats_test = [];
paths_test = {};
%% get line train result

cd(dir_out)
dir_bestmdl = dir(['epoch[' epoch_bestmdl_str '*]']);
dir_bestmdl = dir_bestmdl(1).name;
cd(dir_bestmdl)

load('result_train')


targets = single(targets);
test_wholesize = length(paths);
scores_test = [scores_test; reshape(scores, [length(scores)/(test_wholesize), test_wholesize])'];
feats = cell2mat(feats)';
feats_test = [feats_test; reshape(feats, [length(feats)/(test_wholesize), test_wholesize])'];
paths_test = [paths_test; paths'];
targets_test = [targets_test; single(targets')];

for iter_data = 1:length(targets_test)
    preds_test(iter_data) = find(scores_test(iter_data,:) == max(scores_test(iter_data,:)));
end

%% get line val result

cd(dir_out)
dir_bestmdl = dir(['epoch[' epoch_bestmdl_str '*]']);
dir_bestmdl = dir_bestmdl(1).name;
cd(dir_bestmdl)

load('result_valid')


targets = single(targets);
test_wholesize = length(paths);
scores_test = [scores_test; reshape(scores, [length(scores)/(test_wholesize), test_wholesize])'];
feats = cell2mat(feats)';
feats_test = [feats_test; reshape(feats, [length(feats)/(test_wholesize), test_wholesize])'];
paths_test = [paths_test; paths'];
targets_test = [targets_test; single(targets')];

for iter_data = 1:length(targets_test)
    preds_test(iter_data) = find(scores_test(iter_data,:) == max(scores_test(iter_data,:)));
end

%% get line test result

cd(dir_out)
dir_bestmdl = dir(['epoch[' epoch_bestmdl_str '*]']);
dir_bestmdl = dir_bestmdl(1).name;
cd(dir_bestmdl)

load('result_test')


targets = single(targets);
test_wholesize = length(paths);
scores_test = [scores_test; reshape(scores, [length(scores)/(test_wholesize), test_wholesize])'];
feats = cell2mat(feats)';
feats_test = [feats_test; reshape(feats, [length(feats)/(test_wholesize), test_wholesize])'];
paths_test = [paths_test; paths'];
targets_test = [targets_test; single(targets')];

for iter_data = 1:length(targets_test)
    preds_test(iter_data) = find(scores_test(iter_data,:) == max(scores_test(iter_data,:)));
end
%% get RA train_result

cd(dir_outr)
dir_bestmdl = dir(['epoch[' epoch_bestmdl_str '*]']);
dir_bestmdl = dir_bestmdl(1).name;
cd(dir_bestmdl)

load('result_train')

targets = single(targets);

idxs_del = [];

for iter_data = 1:length(targets)
    path_ = paths{iter_data};
    idxs_slash = strfind(path_,'/');
    fname_ = path_(idxs_slash(end)+1:end);
    if contains(fname_, 'GM') || contains(fname_, 'gm') || contains(fname_, '230719.')  || contains(fname_, '230720.') 
        if contains(fname_, 'Endo') && contains(fname_,{'6h', '6H'})
        elseif contains(fname_, 'Endo') && contains(fname_,{'12h', '12H'})
        elseif contains(fname_, 'Endo') && contains(fname_,{'24h', '24H'})
        elseif contains(fname_, 'Endo') && contains(fname_,{'48h', '48H'})
        elseif contains(fname_, 'Meso') && contains(fname_,{'6h', '6H'})
        elseif contains(fname_,'Meso') && contains(fname_,{'12h', '12H'})
        elseif contains(fname_,'Meso') && contains(fname_,{'24h', '24H'})
        elseif contains(fname_,'Meso') && contains(fname_,{'48h', '48H'})
        elseif contains(fname_, 'Ecto') && contains(fname_,{'6h', '6H'})
        elseif contains(fname_,'Ecto') && contains(fname_,{'12h', '12H'})
        elseif contains(fname_,'Ecto') && contains(fname_,{'24h', '24H'})
        elseif contains(fname_,'Ecto') && contains(fname_,{'72h', '72H'})
        elseif contains(fname_, {'24h', '24H'})
        elseif contains(fname_, {'12h', '12H'})
        else
            idxs_del = [idxs_del iter_data];
        end
    end
end


test_wholesize = length(paths);
scores = reshape(scores, [length(scores)/(test_wholesize), test_wholesize])';
feats = cell2mat(feats)';
feats = reshape(feats, [length(feats)/(test_wholesize), test_wholesize])';
targets = single(targets');
paths = paths';

scores(idxs_del,:) = [];
paths(idxs_del) = [];
feats(idxs_del,:) = [];
targets(idxs_del,:)= [];

scores_test = [scores_test; scores];
feats_test = [feats_test; feats];
paths_test = [paths_test; paths];
targets_test = [targets_test; targets];
%% get RA val_result


cd(dir_outr)
dir_bestmdl = dir(['epoch[' epoch_bestmdl_str '*]']);
dir_bestmdl = dir_bestmdl(1).name;
cd(dir_bestmdl)

load('result_valid')

targets = single(targets);

idxs_del = [];

for iter_data = 1:length(targets)
    path_ = paths{iter_data};
    idxs_slash = strfind(path_,'/');
    fname_ = path_(idxs_slash(end)+1:end);
    if contains(fname_, 'GM') || contains(fname_, 'gm') || contains(fname_, '230719.')  || contains(fname_, '230720.') 
        if contains(fname_, 'Endo') && contains(fname_,{'6h', '6H'})
        elseif contains(fname_, 'Endo') && contains(fname_,{'12h', '12H'})
        elseif contains(fname_, 'Endo') && contains(fname_,{'24h', '24H'})
        elseif contains(fname_, 'Endo') && contains(fname_,{'48h', '48H'})
        elseif contains(fname_, 'Meso') && contains(fname_,{'6h', '6H'})
        elseif contains(fname_,'Meso') && contains(fname_,{'12h', '12H'})
        elseif contains(fname_,'Meso') && contains(fname_,{'24h', '24H'})
        elseif contains(fname_,'Meso') && contains(fname_,{'48h', '48H'})
        elseif contains(fname_, 'Ecto') && contains(fname_,{'6h', '6H'})
        elseif contains(fname_,'Ecto') && contains(fname_,{'12h', '12H'})
        elseif contains(fname_,'Ecto') && contains(fname_,{'24h', '24H'})
        elseif contains(fname_,'Ecto') && contains(fname_,{'72h', '72H'})
        elseif contains(fname_, {'24h', '24H'})
        elseif contains(fname_, {'12h', '12H'})
        else
            idxs_del = [idxs_del iter_data];
        end
    end
end


test_wholesize = length(paths);
scores = reshape(scores, [length(scores)/(test_wholesize), test_wholesize])';
feats = cell2mat(feats)';
feats = reshape(feats, [length(feats)/(test_wholesize), test_wholesize])';
targets = single(targets');
paths = paths';

scores(idxs_del,:) = [];
paths(idxs_del) = [];
feats(idxs_del,:) = [];
targets(idxs_del,:)= [];

scores_test = [scores_test; scores];
feats_test = [feats_test; feats];
paths_test = [paths_test; paths];
targets_test = [targets_test; targets];
%% get RA test_result


cd(dir_outr)
dir_bestmdl = dir(['epoch[' epoch_bestmdl_str '*]']);
dir_bestmdl = dir_bestmdl(1).name;
cd(dir_bestmdl)

load('result_test')

targets = single(targets);

idxs_del = [];

for iter_data = 1:length(targets)
    path_ = paths{iter_data};
    idxs_slash = strfind(path_,'/');
    fname_ = path_(idxs_slash(end)+1:end);
    if contains(fname_, 'GM') || contains(fname_, 'gm') || contains(fname_, '230719.')  || contains(fname_, '230720.') 
        if contains(fname_, 'Endo') && contains(fname_,{'6h', '6H'})
        elseif contains(fname_, 'Endo') && contains(fname_,{'12h', '12H'})
        elseif contains(fname_, 'Endo') && contains(fname_,{'24h', '24H'})
        elseif contains(fname_, 'Endo') && contains(fname_,{'48h', '48H'})
        elseif contains(fname_, 'Meso') && contains(fname_,{'6h', '6H'})
        elseif contains(fname_,'Meso') && contains(fname_,{'12h', '12H'})
        elseif contains(fname_,'Meso') && contains(fname_,{'24h', '24H'})
        elseif contains(fname_,'Meso') && contains(fname_,{'48h', '48H'})
        elseif contains(fname_, 'Ecto') && contains(fname_,{'6h', '6H'})
        elseif contains(fname_,'Ecto') && contains(fname_,{'12h', '12H'})
        elseif contains(fname_,'Ecto') && contains(fname_,{'24h', '24H'})
        elseif contains(fname_,'Ecto') && contains(fname_,{'48h', '48H', '72h', '72H'})
        elseif contains(fname_, {'24h', '24H'})
        elseif contains(fname_, {'12h', '12H'})
        else
            idxs_del = [idxs_del iter_data];
        end
    end
end



test_wholesize = length(paths);
scores = reshape(scores, [length(scores)/(test_wholesize), test_wholesize])';
feats = cell2mat(feats)';
feats = reshape(feats, [length(feats)/(test_wholesize), test_wholesize])';
targets = single(targets');
paths = paths';

scores(idxs_del,:) = [];
paths(idxs_del) = [];
feats(idxs_del,:) = [];
targets(idxs_del,:)= [];

scores_test = [scores_test; scores];
feats_test = [feats_test; feats];
paths_test = [paths_test; paths];
targets_test = [targets_test; targets];
%% get iPSC test_result

cd(dir_outi)
dir_bestmdl = dir(['epoch[' epoch_bestmdl_str '*]']);
dir_bestmdl = dir_bestmdl(1).name;
cd(dir_bestmdl)

load('result_test')

targets = single(targets);
test_wholesize = length(paths);
scores_test = [scores_test; reshape(scores, [length(scores)/(test_wholesize), test_wholesize])'];
feats = cell2mat(feats)';
feats_test = [feats_test; reshape(feats, [length(feats)/(test_wholesize), test_wholesize])'];
paths_test = [paths_test; paths'];
targets_test = [targets_test; single(targets')];



%%

preds_test = -ones(size(targets_test));
for iter_data = 1:length(targets_test)
    preds_test(iter_data) = find(scores_test(iter_data,:) == max(scores_test(iter_data,:)));
end
preds_test = preds_test-1;

lines_test = zeros(size(targets_test)); % represents plot location and (potentially) markers 
types_test = zeros(size(targets_test)); % represents the color
for iter_data = 1:length(targets_test)
    fname = paths_test{iter_data};
    idx_slash = strfind(fname,'/');
    fname = fname(idx_slash(end)+1:end);
    if contains(fname, 'GM') || contains(fname, 'gm') || contains(fname, '230719.')  || contains(fname, '230720.') 
        if contains(fname, 'Endo') && contains(fname,{'6h', '6H'})
            lines_test(iter_data) = 2;
            types_test(iter_data) = 3;%2;
        elseif contains(fname, 'Endo') && contains(fname,{'12h', '12H'})
            lines_test(iter_data) = 3;
            types_test(iter_data) = 3;%2;
        elseif contains(fname, 'Endo') && contains(fname,{'24h', '24H'})
            lines_test(iter_data) = 4;
            types_test(iter_data) = 3;
        elseif contains(fname, 'Endo') && contains(fname,{'48h', '48H'})
            lines_test(iter_data) = 5;
            types_test(iter_data) = 3;
        elseif contains(fname, 'Meso') && contains(fname,{'6h', '6H'})
            lines_test(iter_data) = 6;
            types_test(iter_data) = 4;%4;
        elseif contains(fname,'Meso') && contains(fname,{'12h', '12H'})
            lines_test(iter_data) = 7;
            types_test(iter_data) = 4;%4;
        elseif contains(fname,'Meso') && contains(fname,{'24h', '24H'})
            lines_test(iter_data) = 8;
            types_test(iter_data) = 4;
        elseif contains(fname,'Meso') && contains(fname,{'48h', '48H'})
            lines_test(iter_data) = 9;
            types_test(iter_data) = 4;
        elseif contains(fname, 'Ecto') && contains(fname,{'6h', '6H'})
            lines_test(iter_data) = 10;
            types_test(iter_data) = 5;%4;
        elseif contains(fname,'Ecto') && contains(fname,{'12h', '12H'})
            lines_test(iter_data) = 11;
            types_test(iter_data) = 5;%6;
        elseif contains(fname,'Ecto') && contains(fname,{'24h', '24H'})
            lines_test(iter_data) = 12;
            types_test(iter_data) = 5;
        elseif contains(fname,'Ecto') && contains(fname,{'48h', '48H'})
            lines_test(iter_data) = 13;
            types_test(iter_data) = 5;
        elseif contains(fname,'Ecto') && contains(fname,{'72h', '72H'})
            lines_test(iter_data) = 14;
            types_test(iter_data) = 5;
        elseif contains(fname, {'24h', '24H'})
            lines_test(iter_data) = 16;
            types_test(iter_data) = 2;
        elseif contains(fname, {'12h', '12H'})
            lines_test(iter_data) = 15;
            types_test(iter_data) = 2; %% erase to not distinguish 12h and 24h
        else
            lines_test(iter_data) = 1;
            types_test(iter_data) = 1;
        end

    elseif contains(fname, {'H9', 'h9', '230714.'}) 
        if contains(fname, {'24h', '24H'})
            lines_test(iter_data) = 20;
            types_test(iter_data) = 2;
        elseif contains(fname, {'12h', '12H'})
            lines_test(iter_data) = 19;
            types_test(iter_data)= 2;  %% erase to not distinguish 12h and 24h
        else
            lines_test(iter_data) = 18;
            types_test(iter_data) = 1;
        end

    elseif contains(fname, {'230427', '230713'})%contains(fname, 'JAX', 'Jax', '230713.') 
        % old jax
        continue

    elseif contains(fname,{'JAX','Jax','jax'})
        % late jax
        if contains(fname, {'24h', '24H'})
            lines_test(iter_data) = 24;
            types_test(iter_data) = 2;
        elseif contains(fname, {'12h', '12H'})
            lines_test(iter_data) = 23;
            types_test(iter_data) = 2;  %% erase to not distinguish 12h and 24h
        else
            lines_test(iter_data) = 22;
            types_test(iter_data) = 1;
        end


    elseif contains(fname, {'.HD02.', 'HD02_'})
        lines_test(iter_data) = 26;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.HD03.', 'HD03_'})
        lines_test(iter_data) = 27;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.HD04.', 'HD04_'})
        lines_test(iter_data) = 28;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.HD05.', 'HD05_'})
        lines_test(iter_data) = 29;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.HD07.', 'HD07_'})
        lines_test(iter_data) = 30;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.HD09.', 'HD09_'})
        lines_test(iter_data) = 31;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.HD11.', 'HD11_'})
        lines_test(iter_data) = 32;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.HD12.', 'HD12_'})
        lines_test(iter_data) = 33;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.HD14.', 'HD14_'})
        lines_test(iter_data) = 34;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.HD15.', 'HD15_'})
        lines_test(iter_data) = 35;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.HD18.', 'HD18_'})
        lines_test(iter_data) = 36;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.HD25.', 'HD25_'})
        lines_test(iter_data) = 37;
        types_test(iter_data) = 6;

    elseif contains(fname, {'.B1.', 'B1_','.BJ01.'})
        lines_test(iter_data) = 39;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.BJ04.', 'BJ04_'})
        lines_test(iter_data) = 40;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.B7.', 'B7_'})
        lines_test(iter_data) = 41;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.BJ11.'})
        lines_test(iter_data) = 42;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.B12.', 'B12_'})
        lines_test(iter_data) = 43;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.B13.', 'B13_'})
        lines_test(iter_data) = 44;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.BJ14.'})
        lines_test(iter_data) = 45;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.B17.', 'B17_', '.BJ17.'})
        lines_test(iter_data) = 46;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.B18.', 'B18_'})
        lines_test(iter_data) = 47;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.B21.', 'B21_'})
        lines_test(iter_data) = 48;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.BJ22.'})
        lines_test(iter_data) = 49;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.B23.', 'B23_'})
        lines_test(iter_data) = 50;
        types_test(iter_data) = 6;


    elseif contains(fname, {'.A2.', 'A2_'})
        lines_test(iter_data) = 52;%7;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.A12.', 'A12_'})
        lines_test(iter_data) = 53;%8;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.A19.', 'A19_'})
        lines_test(iter_data) = 54;
        types_test(iter_data) = 6;
    elseif contains(fname, {'.A20.', 'A20_'})
        lines_test(iter_data) = 55;
        types_test(iter_data) = 6;

    else
        continue
        error('No line found')
    end

end
%% plot t-SNE
colors_line = [[1/2 1/2 1/2]%'GM untreated',%1
        [2/3 1 1]%'GM + endo 6h',%2
        [1/3 1 1]%'GM + endo 12h',%3
        [1/4 3/4 3/4]%'GM + endo 24h',%4
        [0 1/2 1/2]%'GM + endo 48h',%5
        [1 2/3 1]%'GM + meso 6h',%6
        [1 1/3 1]%'GM + meso 12h',%7
        [3/4 1/4 3/4]%'GM + meso 24h',%8
        [1/2 0 1/2]%'GM + meso 48h',%9
        [1 1 2/3]%'GM + ecto 6h',%10
        [1 1 1/3]%'GM + ecto 12h',%11
        [3/4 3/4 1/4]%'GM + ecto 24h',%12
        [1/2 1/2 0]%'GM + ecto 48h',%13
        [1/2 1/2 0]%'GM + ecto 72h',%13
        [1 1/2 1/2]%'GM + RA 12h',%14
        [1 0 0]%'GM + RA 24h',%15
        [0 1 0]%% nothing
        [1/2 1/2 1/2]%'H9 untreated',%17
        [1 1/2 1/2]%'H9 + RA 12h',%18
        [1 0 0]%'H9 + RA 24h',%19
        [0 0 0]%% nothing
        [1/2 1/2 1/2]%'JAX untreated',%21
        [1 1/2 1/2]%'JAX + RA 12h',%22
        [1 0 0]%'JAX + RA 24h',%23
        [0 1 0]%% nothing
        [1/2 1/2 1/2]%'HD 02',%25
        [1/2 1/2 1/2]%'HD 03',%26
        [1/2 1/2 1/2]%'HD 04',%27
        [1/2 1/2 1/2]%'HD 05',%28
        [1/2 1/2 1/2]%'HD 07',%29
        [1/2 1/2 1/2]%'HD 09',%30
        [1/2 1/2 1/2]%'HD 11',%31
        [1 0 0]%'HD 12',%32
        [1/2 1/2 1/2]%'HD 14',%33
        [1/2 1/2 1/2]%'HD 15',%34
        [1 0 0]%'HD 18',%35
        [1/2 1/2 1/2]%'HD 25',%36
        [0 1 0]%% nothing
        [1/2 1/2 1/2]%'BJ 01',%38
        [1/2 1/2 1/2]%'BJ 04',%39
        [1/2 1/2 1/2]%'BJ 07',%40
        [1 0 0]%'BJ 11',%41
        [1/2 1/2 1/2]%'BJ 12',%42
        [1/2 1/2 1/2]%'BJ 13',%43
        [1/2 1/2 1/2]%'BJ 14',%44
        [1/2 1/2 1/2]%'BJ 17',%45
        [1/2 1/2 1/2]%'BJ 18',%46
        [1/2 1/2 1/2]%'BJ 21',%47
        [1/2 1/2 1/2]%'BJ 22',%48
        [1 0 0]%'BJ 23',%49
        [0 1 0]%% nothing
        [1/2 1/2 1/2]%'PD 02',%51
        [1/2 1/2 1/2]%'PD 12',%52
        [1 0 0]%'PD 19',%53
        [1 0 0]%'PD 20',%54
        ];
%% 
feats_tsne = {};

perps = [64 128 256];

for perp = perps

feats_tsne_ = tsne(feats_test(lines_test>0,:), 'Perplexity', perp, 'Standardize',true,'LearnRate',250);
feats_tsne{end+1} = feats_tsne_;

end

%%
close all

dir_plot = [dir_out0 '_present/', dir_case, '/' dir_bestmdl '/'];
mkdir(dir_plot);
for iter_perp = 1:length(perps)
%% if 12h is type 1.5
feats_tsne_ = feats_tsne{iter_perp};
perp = perps(iter_perp)

for line_ = unique(lines_test(lines_test>0))'
    marker_ = 'o';
    if line_ >24
            continue
            marker_ = '*';
    end
%     sprintf('The number of data for line # %d is %d', line_, length(idxs_thisline))
    h_fig = figure(perp);
    h_fig.Position = [0 0 900 900];
    h_fig.Color = [0.8 0.8 0.8];
    hold on
    idxs_thisline = find(lines_test == line_);

    color_ = colors_line(line_,:);
    size_ = 33;


%     if sum(color_ == [0 0 0]) == 3
%         if strcmp(marker_, 'o')
%             idxs_thisline = randsample(idxs_thisline, round(length(idxs_thisline)/2));
%         else
%             idxs_thisline = randsample(idxs_thisline, round(length(idxs_thisline)/5));
%         end
%     elseif sum(color_ == [1 0 0]) == 3
%         idxs_thisline = randsample(idxs_thisline, round(length(idxs_thisline)/3));
%     end
    if line_ > 14
        idxs_thisline = randsample(idxs_thisline, 50);
    end

    scatter(feats_tsne_(idxs_thisline,1),feats_tsne_(idxs_thisline,2),marker_,...
    'SizeData', size_, 'MarkerEdgeColor', [1 1 1], 'MarkerFaceColor', color_,...
    'MarkerFaceAlpha', 1,'MarkerEdgeAlpha', 1)
%     plot(feats_tsne_(idxs_thisline,1),feats_tsne_(idxs_thisline,2), marker_,...
%     'MarkerSize', size_, 'MarkerEdgeColor', [0 0 0], 'MarkerFaceColor', color_)
    

    

end

ycen = min(feats_tsne_(:,2))/2+max(feats_tsne_(:,2))/2;
xcen = min(feats_tsne_(:,1))/2+max(feats_tsne_(:,1))/2;
yax = max(feats_tsne_(:,2))-min(feats_tsne_(:,2));
xax = max(feats_tsne_(:,1))-min(feats_tsne_(:,1));

    ylim([min(feats_tsne_(:,2)) max(feats_tsne_(:,2))]);
    xlim([min(feats_tsne_(:,1)) max(feats_tsne_(:,1))]);

set(gcf,'color',[0.8 0.8 0.8])
axis image
axis off
saveas(h_fig, [dir_plot '/' sprintf('tsne_p%03d.fig', perp)])
saveas(h_fig, [dir_plot '/' sprintf('tsne_p%03d.png', perp)])

for line_ = unique(lines_test(lines_test>0))'
    marker_ = 'o';
    if line_ >24
        continue
        marker_ = '*';
    elseif line_ == 2
        continue
    elseif line_ == 3
        continue
    elseif line_ == 6
        continue
    elseif line_ == 9
        continue
    elseif line_ == 13
        continue
    elseif line_ == 14
        continue
    elseif line_ == 11
        continue
    end
%     sprintf('The number of data for line # %d is %d', line_, length(idxs_thisline))
    h_fig = figure(1000+perp);
    h_fig.Position = [0 0 900 900];
    h_fig.Color = [0.8 0.8 0.8];
    hold on
    idxs_thisline = find(lines_test == line_);

    color_ = colors_line(line_,:);
    size_ = 33;

%     if sum(color_ == [0 0 0]) == 3
%         if strcmp(marker_, 'o')
%             idxs_thisline = randsample(idxs_thisline, round(length(idxs_thisline)/2));
%         else
%             idxs_thisline = randsample(idxs_thisline, round(length(idxs_thisline)/5));
%         end
%     elseif sum(color_ == [1 0 0]) == 3
%         idxs_thisline = randsample(idxs_thisline, round(length(idxs_thisline)/3));
%     end
    if line_ > 14
        idxs_thisline = randsample(idxs_thisline, 50);
    end


    scatter(feats_tsne_(idxs_thisline,1),feats_tsne_(idxs_thisline,2),marker_,...
    'SizeData', size_, 'MarkerEdgeColor', [1 1 1], 'MarkerFaceColor', color_,...
    'MarkerFaceAlpha', 1,'MarkerEdgeAlpha', 1)
%     plot(feats_tsne_(idxs_thisline,1),feats_tsne_(idxs_thisline,2), marker_,...
%     'MarkerSize', size_, 'MarkerEdgeColor', [0 0 0], 'MarkerFaceColor', color_)
    

    

end

ycen = min(feats_tsne_(:,2))/2+max(feats_tsne_(:,2))/2;
xcen = min(feats_tsne_(:,1))/2+max(feats_tsne_(:,1))/2;
yax = max(feats_tsne_(:,2))-min(feats_tsne_(:,2));
xax = max(feats_tsne_(:,1))-min(feats_tsne_(:,1));

    ylim([min(feats_tsne_(:,2)) max(feats_tsne_(:,2))]);
    xlim([min(feats_tsne_(:,1)) max(feats_tsne_(:,1))]);

set(gcf,'color',[0.8 0.8 0.8])
axis image
axis off

saveas(h_fig, [dir_plot '/' sprintf('tsne_p%03d_pickh.fig', perp)])
saveas(h_fig, [dir_plot '/' sprintf('tsne_p%03d_pickh.png', perp)])

end