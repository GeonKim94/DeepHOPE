%% load features
close all
clear
clc
addpath('/data01/gkim/Matlab_subcodes/gk/')

dir_total = '/data02/gkim/stem_cell_jwshin/data/';
cd(dir_total)
list_exp = dir('2*feat_wider_v3');

feats_ = [];
lines_ = [];
types_ = [];
%high line: 1
%low line: 2
%high ipsc: 3
%low ipsc: 4

for iter_exp = 1:length(list_exp)
    cd(dir_total)
    cd(list_exp(iter_exp).name)
    cd('00_train')
    list_cls = dir('*_*');

    for iter_cls = 1:length(list_cls)

        fold_cls = list_cls(iter_cls).name;
        if contains(fold_cls, 'JAX')
            continue
        elseif contains(fold_cls, 'Jax')
            continue
        elseif contains(fold_cls, 'jax')
            continue
        elseif contains(fold_cls, 'GM') && contains(fold_cls, 'untreated')
            line_ = 1;
            type_ = 1;
        elseif contains(fold_cls, 'GM') && contains(fold_cls, 'hour')
            line_ = 2;
            type_ = 2;
        elseif contains(fold_cls, 'H9') && contains(fold_cls, 'untreated')
            line_ = 4;
            type_ = 1;
        elseif contains(fold_cls, 'H9') && contains(fold_cls, 'hour')
            line_ = 5;
            type_ = 2;
        elseif contains(fold_cls, 'A2_')
            line_ = 7;
            type_ = 3;
        elseif contains(fold_cls, 'A12_')
            line_ = 8;
            type_ = 3;
        elseif contains(fold_cls, 'A19_')
            line_ = 9;
            type_ = 4;
        elseif contains(fold_cls, 'A20_')
            line_ = 10;
            type_ = 4;
        elseif contains(fold_cls, 'B1_')
            line_ = 12;
            type_ = 3;
        elseif contains(fold_cls, 'B7_')
            line_ = 13;
            type_ = 3;
        elseif contains(fold_cls, 'B12_')
            line_ = 14;
            type_ = 3;
        elseif contains(fold_cls, 'B13_')
            line_ = 15;
            type_ = 3;
        elseif contains(fold_cls, 'B17_')
            line_ = 16;
            type_ = 3;
        elseif contains(fold_cls, 'B18_')
            line_ = 17;
            type_ = 3;
        elseif contains(fold_cls, 'B21_')
            line_ = 18;
            type_ = 3;
        elseif contains(fold_cls, 'B23_')
            line_ = 19;
            type_ = 3;
        elseif contains(fold_cls, 'HD02_')
            line_ = 21;
            type_ = 3;%4;
        elseif contains(fold_cls, 'HD03_')
            line_ = 22;
            type_ = 3;
        elseif contains(fold_cls, 'HD05_')
            line_ = 23;
            type_ = 3;%4;
        elseif contains(fold_cls, 'HD09_')
            line_ = 24;
            type_ = 3;%4;
        elseif contains(fold_cls, 'HD11_')
            line_ = 25;
            type_ = 3;
        elseif contains(fold_cls, 'HD12_')
            line_ = 26;
            type_ = 3;%4;
        elseif contains(fold_cls, 'HD14_')
            line_ = 27;
            type_ = 3;%4;
        elseif contains(fold_cls, 'HD15_')
            line_ = 28;
            type_ = 3;
        elseif contains(fold_cls, 'HD25_')
            line_ = 29;
            type_ = 3;
        else
            error('no line found')
        end

        
        cd(dir_total)
        cd(list_exp(iter_exp).name)
        cd('00_train')
        cd(fold_cls)
        list_feat = dir('*.mat');
        for iter_feat = 1:length(list_feat)
            load(list_feat(iter_feat).name);
            feat_ = [volume_colony,area_colony,RI_avg_colony,RI_std_colony,...
                volume_lip,area_lip,RI_avg_lip,RI_std_lip,...# volume_cyto = volume_colony-volume_lip
                volume_cyto,area_cyto,RI_avg_cyto,RI_std_cyto,...
                area_gap,len_bound,roundness,solidity,eccentricity,...
                n_boundin,n_boundout,ncont_bound,...
                thick_avg,thick_std, spread_thick/sqrt(area_colony), sqrt(sum(abs(skew_thick).^2)), kurt_thick,...
                spread_dm/sqrt(area_colony), sqrt(sum(abs(skew_dm).^2)), kurt_dm,...
                spread_lip/sqrt(area_colony), sqrt(sum(abs(skew_lip).^2)), kurt_lip,...
                volume_lip/volume_colony,...
                area_gap/area_colony,...
                thick_avg/sqrt(area_colony)];
            feats_ = [feats_; feat_];
            lines_ = [lines_; line_];
            types_ = [types_; type_];
        end

    end

end


names_feat = {'volume_colony','area_colony','RI_avg_colony','RI_std_colony',...
                'volume_lip','area_lip','RI_avg_lip','RI_std_lip',...# volume_cyto = volume_colony-volume_lip
                'volume_cyto','area_cyto','RI_avg_cyto','RI_std_cyto',...
                'area_gap','len_bound','roundness','solidity','eccentricity',...
                'n_boundin','n_boundout','ncont_bound',...
                'thick_avg','thick_std', 'spread_thick', 'skew_thick', 'kurt_thick',...
                'spread_dm', 'skew_dm', 'kurt_dm',...
                'spread_lip', 'skew_lip', 'kurt_lip',...
                'volume_ratio_lip',...
                'area_ratio_gap',...
                'aspect_ratio_xz'};

%% plot features

colors_type = [0 176/255 240/255;...
                1 128/255 0;...
                0 0 1;
                1 0 0];


labels_xtick = {'GM untreated',
        'GM RA-treated',
        'H9 untreated',
        'H9 RA-treated',
        'PD 02',%'A2_',
        'PD 12',%'A12_',
        'PD 19',%'A19_',
        'PD 20',%'A20_',
        'BJ 01',%'B1_',
        'BJ 07',%'B7_',
        'BJ 12',%'B12_',
        'BJ 13',%'B13_',
        'BJ 17',%'B17_',
        'BJ 18',%'B18_',
        'BJ 21',%'B21_',
        'BJ 23',%'B23_',
        'HD 02',
        'HD 03',
        'HD 05',
        'HD 09',
        'HD 11',
        'HD 12',
        'HD 14',
        'HD 15',
        'HD 25'};

dir_plot = '/data02/gkim/stem_cell_jwshin/data_present/231201_features';
mkdir(dir_plot)

for iter_feat = 20:size(feats_,2)
    
    close

    h_fig = figure(iter_feat);
    h_fig.Position = [0 0 1200 600];
    h_fig.Color = [1 1 1];
    hold on
    for line_ = unique(lines_)'
        idxs_thisline = find(lines_ == line_);

        y_ = feats_(idxs_thisline,iter_feat);
        x_ = line_;

        bar(x_,mean(y_),'LineWidth',2,'FaceColor','none','FaceColor', colors_type(types_(idxs_thisline(1)),:));
        errorbar(x_,mean(y_),std(y_,0,1), 'k','LineWidth',2);

        
    end
    ax = gca;
    
    % Set the axis and tick width
    axis_line_width = 2;  % adjust as needed
    tick_line_width = 2;  % adjust as needed
    
    ax.LineWidth = axis_line_width;
    
    % Set the tick width
    ax.XAxis.LineWidth = tick_line_width;
    ax.YAxis.LineWidth = tick_line_width;

    if contains(names_feat{iter_feat},'RI_avg')
        ylim([1.345, inf])

    elseif contains(names_feat{iter_feat},'n_')
        ylim([1.337, inf])


    elseif contains(names_feat{iter_feat},'kurt_')
        ylim([1, inf])
    else
        ylim([0 inf])
    end


    xticks(unique(lines_));
    xticklabels(labels_xtick);
    set(gca, 'FontSize', 15)
    title(strrep(names_feat{iter_feat}, '_', ' '));

    saveas(gcf,[dir_plot, '/', names_feat{iter_feat}, '.fig']);
    saveas(gcf,[dir_plot, '/', names_feat{iter_feat}, '.png']);

end


%% plot qPCR

OCT4_avg = [1	0.777851355	1.450030709	0.922202656		11.03319338	11.43110421	6.915409953	3.973021174		0.69293594	0.783471674	0.712521777	0.923294007	0.854028467	0.846877371	0.78710852	0.853528837		2.290726751	4.648651032	2.150177454	1.865306942	4.492078541	2.472146714	0.611291212	1.363239028	4.389258906];
OCT4_std = [0.003257945	0.041235028	0.031033553	0.020653638		1.21977653	1.223138904	0.570315383	0.353706597		0.012552804	0.00187261	0.022198777	0.018281663	0.011235409	0.010873495	0.032590236	0.006108661		0.061525869	0.262333613	0.097738797	0.053311902	0.09411293	0.02964216	0.007473565	0.003221493	0.037883939];


NANOG_avg = [1	0.446624538	1.368657399	0.550257273		7.604590809	7.477475196	4.805419176	1.900036523		0.994066021	0.909748488	1.024658729	0.90678719	1.100288893	0.957245731	1.018915132	1.111536849		2.439288794	10.30103129	1.929762614	4.487055558	9.918823711	7.905816653	1.042549606	3.735464081	9.191721048];
NANOG_std = [0.003246835	0.006828827	0.011311712	0.006008994		0.617739621	0.555396822	0.172721782	0.06763154		0.019097912	0.003627839	0.024053431	0.017425399	0.015299016	0.012711375	0.014139658	0.008701237		0.129762537	0.573281091	0.095207592	0.178235836	0.371932049	0.239493202	0.014133579	0.086211206	0.113681055];


ZFP42_avg = [1	1.092502082	0.759993215	0.732676165		3.700124607	2.548564379	2.271408197	1.090771507		1.110665684	0.962625537	0.609387487	0.140564306	1.324166152	1.208097191	1.2648426	1.25441229		2.820450181	3.575514345	2.425259255	1.871443168	3.95841082	1.911016718	0.833510272	1.382972859	4.080982608];
ZFP42_std = [0.012493487	0.010664712	0.003626181	0.013060486		0.361887044	0.300613362	0.297023957	0.113303467		0.031876047	0.008829379	0.010176988	0.001618759	0.015918313	0.02905865	0.014702339	0.022017362		0.133195915	0.225548579	0.09823669	0.053895685	0.080793433	0.048986529	0.00838595	0.016785835	0.0703423];



count_ = 0;
for line_ = unique(lines_test)'
    count_ = count_+1;
        idxs_thisline = find(lines_test == line_);

        x_ = line_;

        if types_test(idxs_thisline(1))>2
            add_cidx = 2;
        else
            add_cidx = 0;
        end

        bar(x_,OC,'LineWidth',2,'FaceColor','none','FaceColor', colors_type(2+add_cidx,:));
        bar(x_,sum(y_ == 1),'LineWidth',2,'FaceColor','none','FaceColor', colors_type(1+add_cidx,:));
        
    end
ax = gca;

% Set the axis and tick width
axis_line_width = 2;  % adjust as needed
tick_line_width = 2;  % adjust as needed

ax.LineWidth = axis_line_width;

% Set the tick width
ax.XAxis.LineWidth = tick_line_width;
ax.YAxis.LineWidth = tick_line_width;

xticks(unique(lines_test));
xticklabels(labels_xtick);
set(gca, 'FontSize', 15)
title(strrep('prediction', '_', ' '));

saveas(gcf,[dir_plot, '/', 'prediction', '.fig']);
saveas(gcf,[dir_plot, '/', 'prediction', '.png']);
